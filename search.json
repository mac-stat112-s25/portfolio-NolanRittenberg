[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "COMP/STAT112 Notebook",
    "section": "",
    "text": "Welcome\nWelcome to my online portfolio for COMP/STAT112 course taken at Macalester College. Please, use the side bar on the left for navigation.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "bw/bw-uni.html",
    "href": "bw/bw-uni.html",
    "title": "\n1  Univariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking univariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(ggplot2)\n\nsimpsons_episodes = read.csv(\"/Users/nrittenberg24/Desktop/simpsons_episodes.csv\")\nhead(simpsons_episodes)\n\n  id\n1 10\n2 12\n3 14\n4 17\n5 19\n6 21\n                                                                     image_url\n1 http://static-media.fxx.com/img/FX_Networks_-_FXX/305/815/Simpsons_01_10.jpg\n2 http://static-media.fxx.com/img/FX_Networks_-_FXX/245/843/Simpsons_01_12.jpg\n3    http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/bart_gets_F.jpg\n4 http://static-media.fxx.com/img/FX_Networks_-_FXX/660/859/Simpsons_02_01.jpg\n5 http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/Simpsons_02_08.jpg\n6 http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/Simpsons_02_06.jpg\n  imdb_rating imdb_votes number_in_season number_in_series original_air_date\n1         7.4       1511               10               10        1990-03-25\n2         8.3       1716               12               12        1990-04-29\n3         8.2       1638                1               14        1990-10-11\n4         8.1       1457                4               17        1990-11-01\n5         8.0       1366                6               19        1990-11-15\n6         8.4       1522                8               21        1990-12-06\n  original_air_year production_code season\n1              1990            7G10      1\n2              1990            7G12      1\n3              1990            7F03      2\n4              1990            7F01      2\n5              1990            7F08      2\n6              1990            7F06      2\n                                                  title us_viewers_in_millions\n1                                     Homer's Night Out                   30.3\n2                                    Krusty Gets Busted                   30.4\n3                                      Bart Gets an \"F\"                   33.6\n4 Two Cars in Every Garage and Three Eyes on Every Fish                   26.1\n5                                  Dead Putting Society                   25.4\n6                                    Bart the Daredevil                   26.2\n                                        video_url views\n1 http://www.simpsonsworld.com/video/275197507879 50816\n2 http://www.simpsonsworld.com/video/288019523914 62561\n3 http://www.simpsonsworld.com/video/260539459671 59575\n4 http://www.simpsonsworld.com/video/260537411822 64959\n5 http://www.simpsonsworld.com/video/260539459670 50691\n6 http://www.simpsonsworld.com/video/260539459702 57605\n\ndim(simpsons_episodes)\n\n[1] 600  14\n\nggplot(simpsons_episodes, aes(x = imdb_rating)) + \n  geom_density(fill = \"yellow\", color = \"skyblue\", size = 1, alpha = 0.7) + \n  theme_classic() +\n  labs(title = \"                       IMDB Ratings of Individual Simpsons Epidodes\",\n       x = \"IMDB Rating\",\n       y = \"Percentage of Episodes\",\n       caption = \"Created By: Nolan Rittenberg\") +\n  theme(\n    plot.title = element_text(color = \"skyblue\", size = 14, face = \"bold\"),  \n    axis.title.x = element_text(color = \"skyblue\", size = 12, face = \"bold\"), \n    axis.title.y = element_text(color = \"skyblue\", size = 12, face = \"bold\"),  \n    axis.text = element_text(color = \"skyblue\", size = 10, face = \"bold\"), \n    plot.caption = element_text(color = \"skyblue\", size = 10, face = \"italic\") \n  )",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Univariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-bi.html",
    "href": "bw/bw-bi.html",
    "title": "\n2  Bivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking bivariate visualization. The visualization will not perfect the first time but you are expected to improve it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\nCA_Test_Scores = read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/AER/CASchools.csv\")\n\nggplot(CA_Test_Scores, aes(x = income, y = math)) + \n  geom_point() + \n  geom_smooth() +\n  theme_bw() +\n  labs(title = \"California: Income vs. Standardized Math Test Scores\",\n       x = \"Income\",\n       y = \"Math Test Score\",\n       caption = \"Created By: Nolan Rittenberg\") +\n  theme(\n    panel.background = element_rect(fill = \"grey\", color = \"grey\"),\n    plot.background = element_rect(fill = \"grey\", color = \"grey\"),\n    legend.background = element_rect(fill = \"grey\", color = \"grey\")\n    )\n\n\n\n\n\n\n\n::: This is a bivariate graph that shows the correlation between household income and standardized math test scores in the state of California. Both variables are numerical. From this graph, it can be concluded that lower household income is correlated with a lower standardized math test score. :::\n\nlibrary(\"mosaic\")\nlibrary(\"mosaicData\")\nlibrary(\"fivethirtyeight\")\n\n\ndata(bechdel)\nnew_bechdel &lt;- bechdel |&gt;\n  mutate(clean_test = factor(clean_test, c(\"nowomen\", \"notalk\", \"men\", \"dubious\", \"ok\"))) |&gt;\n  mutate(half_decades = cut(year, breaks = seq(1969, 2014, by = 5)))\n\n\nggplot(new_bechdel, aes(x = half_decades, fill = clean_test)) + \n  geom_bar(position = \"dodge\") +\n  scale_color_viridis_b() +\n theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(\n    title = \"New Bechdel Test Over The Past 45 Years\",\n       x = \"Years\",\n       y = \"Number of Movies\",\n       caption = \"Created By: Nolan Rittenberg\")",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-tri.html",
    "href": "bw/bw-tri.html",
    "title": "\n3  Trivariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking trivariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nsimpsons_episodes = read.csv(\"/Users/nrittenberg24/Desktop/simpsons_episodes.csv\")\nhead(simpsons_episodes)\n\n  id\n1 10\n2 12\n3 14\n4 17\n5 19\n6 21\n                                                                     image_url\n1 http://static-media.fxx.com/img/FX_Networks_-_FXX/305/815/Simpsons_01_10.jpg\n2 http://static-media.fxx.com/img/FX_Networks_-_FXX/245/843/Simpsons_01_12.jpg\n3    http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/bart_gets_F.jpg\n4 http://static-media.fxx.com/img/FX_Networks_-_FXX/660/859/Simpsons_02_01.jpg\n5 http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/Simpsons_02_08.jpg\n6 http://static-media.fxx.com/img/FX_Networks_-_FXX/662/811/Simpsons_02_06.jpg\n  imdb_rating imdb_votes number_in_season number_in_series original_air_date\n1         7.4       1511               10               10        1990-03-25\n2         8.3       1716               12               12        1990-04-29\n3         8.2       1638                1               14        1990-10-11\n4         8.1       1457                4               17        1990-11-01\n5         8.0       1366                6               19        1990-11-15\n6         8.4       1522                8               21        1990-12-06\n  original_air_year production_code season\n1              1990            7G10      1\n2              1990            7G12      1\n3              1990            7F03      2\n4              1990            7F01      2\n5              1990            7F08      2\n6              1990            7F06      2\n                                                  title us_viewers_in_millions\n1                                     Homer's Night Out                   30.3\n2                                    Krusty Gets Busted                   30.4\n3                                      Bart Gets an \"F\"                   33.6\n4 Two Cars in Every Garage and Three Eyes on Every Fish                   26.1\n5                                  Dead Putting Society                   25.4\n6                                    Bart the Daredevil                   26.2\n                                        video_url views\n1 http://www.simpsonsworld.com/video/275197507879 50816\n2 http://www.simpsonsworld.com/video/288019523914 62561\n3 http://www.simpsonsworld.com/video/260539459671 59575\n4 http://www.simpsonsworld.com/video/260537411822 64959\n5 http://www.simpsonsworld.com/video/260539459670 50691\n6 http://www.simpsonsworld.com/video/260539459702 57605\n\ndim(simpsons_episodes)\n\n[1] 600  14\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nggplot(simpsons_episodes, aes(x = views, y = imdb_rating, color = season)) +\n  scale_color_viridis_b() +\n  geom_point() +\n  labs(title = \"Which Seasons of The Simpsons Have the Most Views and Highest Ratings?\", x = \"Views\", y = \"IMDB Rating\", caption = \"Created By:\n           Nolan Rittenberg\") + \n   theme_dark() +\n  theme(\n    panel.background = element_rect(fill = \"lightgrey\", color = \"lightgrey\"),\n    plot.background = element_rect(fill = \"lightgrey\", color = \"lightgrey\"),\n    legend.background = element_rect(fill = \"lightgrey\", color = \"lightgrey\")\n    )",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Trivariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-quad.html",
    "href": "bw/bw-quad.html",
    "title": "\n4  Quadvariate Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking quadvariate visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nCA_Test_Scores = read.csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/AER/CASchools.csv\")\n\nggplot(CA_Test_Scores, aes(x = income, y = math, color = read)) + \n  geom_point() + \n  facet_wrap(~grades) +\n  scale_color_gradient(low = \"gold\", high = \"blue\") + \n  theme_bw() +\n  labs(title = \"Income vs. Standardized Reading and Math Test Scores For Grade Level, KK-06 and KK-08 In California Schools\",\n       x = \"Income\",\n       y = \"Math Score\",\n       color = \"Reading Score\",\n       caption = \"Created By: Nolan Rittenberg\",\n       ) +\n    theme(\n    panel.background = element_rect(fill = \"grey\", color = \"grey\"),\n    plot.background = element_rect(fill = \"grey\", color = \"grey\"),\n    legend.background = element_rect(fill = \"grey\", color = \"grey\"),\n    plot.title = element_text(size = 9) \n    )",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Quadvariate Viz</span>"
    ]
  },
  {
    "objectID": "bw/bw-spatial.html",
    "href": "bw/bw-spatial.html",
    "title": "\n5  Spatial Viz\n",
    "section": "",
    "text": "Use this file to generate a professional looking spatial visualization. The visualization will not perfect the first time but you are expected to improve on it throughout the semester especially after covering advanced topics such as effective viz.\n\nlibrary(tidyverse)\n\nfavorite_stp &lt;- tribble(\n  ~place, ~latitude, ~longitude, ~favorite,\n  \"Lake Merritt\", 37.803114, -122.257574, \"no\",\n  \"Bishop O'Dowd High School\", 37.752794, -122.154875, \"yes\",\n  \"Soccer Field\", 37.820813, -122.234928, \"yes\",\n  \"Steep Ravine\", 37.883492, -122.627942, \"yes\",\n  \"Sporting CP Soccer Stadium\", 38.761197, -9.160796, \"no\",\n  \"San Sebastian, Spain\", 43.315804, -1.989508, \"no\",\n  \"Jack London Square\", 37.793694, -122.275878, \"no\",\n  \"Oakland Coliseum\", 37.751346, -122.200996, \"no\",\n  \"Lake Atitlan\", 14.709353, -91.186263, \"no\",\n  \"Lake Tahoe\", 39.086824, -120.044983, \"no\",\n  \"Pheonix Cup Soccer Tournament\", 33.448376, -112.074036, \"no\",\n  \"Macalester College Soccer Field\", 44.935251, -93.168314, \"no\",\n  \"Barcelona\", 41.402970, 2.174339, \"no\", \n  \"Playa Las Tortugas\", 21.341994, -105.242991, \"no\",\n  \"Evergreen Lodge\", 37.876005, -119.858070, \"no\",\n  \"Wilder Fields\", 37.866482, -122.192308, \"no\"\n)\n\n\n# Load the leaflet package\nlibrary(leaflet)\n\ncolor_palette &lt;- colorFactor(\n  palette = c(\"orange\", \"blue\"),\n  domain = favorite_stp$favorite\n)\n\nleaflet(data = favorite_stp) |&gt;\n  addTiles() |&gt;\n  addCircleMarkers(\n    lat = ~latitude,\n    lng = ~longitude,\n    color = ~color_palette(favorite),\n    radius = 8,\n    stroke = FALSE,\n    fillOpacity = .85,\n    popup = ~place\n    ) |&gt;\n  addLegend(\n    \"topright\",\n    pal = color_palette,\n    values = ~favorite, \n    title = \"Nolan Rittenberg's Favorite Places in the World\",\n  )",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Spatial Viz</span>"
    ]
  },
  {
    "objectID": "bw/Project1_choropleth_map.html",
    "href": "bw/Project1_choropleth_map.html",
    "title": "\n6  Project1_choropleth_map\n",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(sf)\n\nLinking to GEOS 3.13.0, GDAL 3.8.5, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(rnaturalearth)\n\n\ncovid_in_italy &lt;- read_csv(\"~/Documents/portfolio-NolanRittenberg/bw/covid19_italy_province.csv\")\n\nRows: 40201 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Country, RegionName, ProvinceName, ProvinceAbbreviation\ndbl  (6): SNo, RegionCode, ProvinceCode, Latitude, Longitude, TotalPositiveC...\ndttm (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncovid_in_italy_per_region &lt;- covid_in_italy |&gt;\n  group_by(RegionName) |&gt;\n  summarise(region_cases = n())\n\n\nitaly_shape_file &lt;- read_sf(\"georef-italy-provincia/georef-italy-provincia-millesime.shp\")\n\nitaly_map &lt;- ne_states(returnclass = \"sf\", country = \"Italy\")\n\ncovid_in_italy_per_shape &lt;- italy_shape_file |&gt;\n  left_join(covid_in_italy_per_region, join_by(reg_name == RegionName))\n  \n\n\n  \nggplot(covid_in_italy_per_shape) + \n  geom_sf(\n    aes(fill = region_cases)\n  ) +\n  scale_fill_gradient(\n    low = \"pink\",\n    high = \"darkred\",\n    name = \"Total Number of COVID-19 Cases\"\n  ) + \n  labs(title = \"Amount of COVID-19 Cases Per Province In Italy (2022)\", \n       subtitle = \"Grey = N/A\", \n       caption = \"By: Nolan Rittenberg\") + \n  theme_void() + \n  theme(\n    plot.title = element_text(hjust = .5, face = \"bold\"), \n    plot.subtitle = element_text(hjust = .5), \n    plot.caption = element_text(hjust = .5),\n    plot.margin = margin(t = 10, r = 10, b = 20, l = 10)\n  )\n\n\n\n\n\n\n# region_cases are NA for the provinces, Bolzano and Trento. This dataset does not have data for the covid cases in Bolzano and Trento. \n\nIn the Year 2022, Italy was hit hard by COVID-19. Italy was at the forefront of Europe’s ongoing challenge with COVID-19. The most common areas and provinces for tourism in Italy are very similar to the areas and provinces that had the highest amount of COVID-19 cases. Tourism is a large part of Italy’s economy, which makes the implication of COVID-19 regulations particularly challenging. In 2022, Italy understandably decreased their COVID-19 travel regulations however, this led to a serious increase in the number of COVID-19 cases because the most affected areas by COVID-19 were also the most visited areas by tourists.",
    "crumbs": [
      "Best Work",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Project1_choropleth_map</span>"
    ]
  },
  {
    "objectID": "bw/Exam1_code.html",
    "href": "bw/Exam1_code.html",
    "title": "\n7  Exam1_code\n",
    "section": "",
    "text": "Research question: What does the consumption of each food category in each country look like?\nPart 3:\n\nlibrary(tidytuesdayR)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nPart 4:\n\ntuesdata &lt;- tt_load('2020-02-18')\n\n---- Compiling #TidyTuesday Information for 2020-02-18 ----\n--- There is 1 file available ---\n\n\n── Downloading files ───────────────────────────────────────────────────────────\n\n  1 of 1: \"food_consumption.csv\"\n\nfc &lt;- tuesdata$food_consumption\n\nPart 5:\n\nhead(tuesdata)\n\n$food_consumption\n# A tibble: 1,430 × 4\n   country   food_category            consumption co2_emmission\n   &lt;chr&gt;     &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;\n 1 Argentina Pork                           10.5          37.2 \n 2 Argentina Poultry                        38.7          41.5 \n 3 Argentina Beef                           55.5        1712   \n 4 Argentina Lamb & Goat                     1.56         54.6 \n 5 Argentina Fish                            4.36          6.96\n 6 Argentina Eggs                           11.4          10.5 \n 7 Argentina Milk - inc. cheese            195.          278.  \n 8 Argentina Wheat and Wheat Products      103.           19.7 \n 9 Argentina Rice                            8.77         11.2 \n10 Argentina Soybeans                        0             0   \n# ℹ 1,420 more rows\n\ndim(tuesdata)\n\nNULL\n\ntail(tuesdata)\n\n$food_consumption\n# A tibble: 1,430 × 4\n   country   food_category            consumption co2_emmission\n   &lt;chr&gt;     &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;\n 1 Argentina Pork                           10.5          37.2 \n 2 Argentina Poultry                        38.7          41.5 \n 3 Argentina Beef                           55.5        1712   \n 4 Argentina Lamb & Goat                     1.56         54.6 \n 5 Argentina Fish                            4.36          6.96\n 6 Argentina Eggs                           11.4          10.5 \n 7 Argentina Milk - inc. cheese            195.          278.  \n 8 Argentina Wheat and Wheat Products      103.           19.7 \n 9 Argentina Rice                            8.77         11.2 \n10 Argentina Soybeans                        0             0   \n# ℹ 1,420 more rows\n\nstr(tuesdata)\n\nList of 1\n $ food_consumption: spc_tbl_ [1,430 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n  ..$ country      : chr [1:1430] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n  ..$ food_category: chr [1:1430] \"Pork\" \"Poultry\" \"Beef\" \"Lamb & Goat\" ...\n  ..$ consumption  : num [1:1430] 10.51 38.66 55.48 1.56 4.36 ...\n  ..$ co2_emmission: num [1:1430] 37.2 41.53 1712 54.63 6.96 ...\n  ..- attr(*, \"spec\")=\n  .. .. cols(\n  .. ..   country = col_character(),\n  .. ..   food_category = col_character(),\n  .. ..   consumption = col_double(),\n  .. ..   co2_emmission = col_double()\n  .. .. )\n  ..- attr(*, \"problems\")=&lt;externalptr&gt; \n - attr(*, \".tt\")= 'tt' chr \"food_consumption.csv\"\n  ..- attr(*, \".files\")='data.frame':   1 obs. of  3 variables:\n  .. ..$ data_files: chr \"food_consumption.csv\"\n  .. ..$ data_type : chr \"csv\"\n  .. ..$ delim     : chr \",\"\n  ..- attr(*, \".readme\")=List of 2\n  .. ..$ node:&lt;externalptr&gt; \n  .. ..$ doc :&lt;externalptr&gt; \n  .. ..- attr(*, \"class\")= chr [1:2] \"xml_document\" \"xml_node\"\n  ..- attr(*, \".date\")= Date[1:1], format: \"2020-02-18\"\n - attr(*, \"class\")= chr \"tt_data\"\n\nclass(tuesdata)\n\n[1] \"tt_data\"\n\n\n\nhead(fc)\n\n# A tibble: 6 × 4\n  country   food_category consumption co2_emmission\n  &lt;chr&gt;     &lt;chr&gt;               &lt;dbl&gt;         &lt;dbl&gt;\n1 Argentina Pork                10.5          37.2 \n2 Argentina Poultry             38.7          41.5 \n3 Argentina Beef                55.5        1712   \n4 Argentina Lamb & Goat          1.56         54.6 \n5 Argentina Fish                 4.36          6.96\n6 Argentina Eggs                11.4          10.5 \n\ndim(fc)\n\n[1] 1430    4\n\ntail(fc)\n\n# A tibble: 6 × 4\n  country    food_category            consumption co2_emmission\n  &lt;chr&gt;      &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;\n1 Bangladesh Eggs                            2.08          1.91\n2 Bangladesh Milk - inc. cheese             21.9          31.2 \n3 Bangladesh Wheat and Wheat Products       17.5           3.33\n4 Bangladesh Rice                          172.          220.  \n5 Bangladesh Soybeans                        0.61          0.27\n6 Bangladesh Nuts inc. Peanut Butter         0.72          1.27\n\nstr(fc)\n\nspc_tbl_ [1,430 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ country      : chr [1:1430] \"Argentina\" \"Argentina\" \"Argentina\" \"Argentina\" ...\n $ food_category: chr [1:1430] \"Pork\" \"Poultry\" \"Beef\" \"Lamb & Goat\" ...\n $ consumption  : num [1:1430] 10.51 38.66 55.48 1.56 4.36 ...\n $ co2_emmission: num [1:1430] 37.2 41.53 1712 54.63 6.96 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   country = col_character(),\n  ..   food_category = col_character(),\n  ..   consumption = col_double(),\n  ..   co2_emmission = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\nclass(fc)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\n\nPart 6: - The units of observation are country, food_category, consumption, and co2_emission - There are 11 food categories - there are 130 countries\nPart 7: - There are 3 variables involved in the research question - The variables are, food_category (categorical), country (categorical), and consumption\n\nggplot(fc, aes(y = food_category)) + \n  geom_bar() + \n   theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n# bad bar graph, however for univariate categorical data, a bar graph is optimal. This graph shows that there is the same amount of every food category. \n\n\nggplot(fc, aes(x = country)) + \n  geom_bar()\n\n\n\n\n\n\n# As discussed in class, the visualizations for countries would be very difficult to produce because of the very high number of countries in the dataset. \n# Simmilar to the previous graph, this is a univariate categorical visualization, so a bar graph would be best to use. \n\n\nggplot(fc, aes(x = consumption)) + \n  geom_density()\n\n\n\n\n\n\n# Consumption is a numerical value. The best univariate plot for a numerical variable is a density graph or histogram. However, this graph does not tell a good story. \n\nPart 8: Overall Food Consumption / Food Category\n\nggplot(fc, aes(x = food_category, y = consumption)) + \n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n# This graph is better than the previous graphs. It is a bivariate graph with one categorical variable and one numberical variable. \n\nOverall Food Consumption / Country\n\nggplot(fc, aes(y = country, x = consumption)) + \n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n# This graph is not good because there is a very large number of countries. This makes it almost impossible to interpret the graph. However, a boxplot is the optimal graph in this situation because the goal is to visualize a numerical variable and categorical variable in a bivariate visualization. If there was more space for the graph to occupy it would be more effective.\n\nPart 9:\n\nggplot(fc, aes(fill = consumption, x = food_category, y = country)) + \n  geom_tile()\n\n\n\n\n\n\n# This graph is not effective because there is not enough screen space on the computer to fit all countries. \n\nThe other visualizations I would try this research question are a map or a facet wraped bar graph. A choropleth map would be best because each country could be shaded a different color based on the amount of consumption.\nPart 10: At least five effective viz concepts for this research question: 1. captions 2. color blind friendly 3. alternative text 4. aesthetically pleasing theme/style 5. labeled axes 6. title 7. source\n\nggplot(fc, aes(fill = food_category, y = consumption, x = food_category)) + \n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  theme_minimal()\n\n\n\n\n\n\n\n\nggplot(fc, aes(x = food_category, y = consumption, fill = food_category)) + \n  geom_boxplot() + \n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + \n  theme_grey() + \n  labs(x = \"Food Category\", \n       y = \"Consumption\", \n       title = \"Amount of Consumption of Different Food Categories\",\n       Caption = \"Visualization By: Nolan Rittenberg, \n       Data From: tidytuesdayR\") +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1, size = 14), \n    axis.text.y = element_text(size = 14),  \n    axis.title.x = element_text(size = 16, face = \"bold\"), \n    axis.title.y = element_text(size = 16, face = \"bold\"),  \n    plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5, margin = margin(b = 15)),  \n    plot.caption = element_text(size = 12, hjust = 0, margin = margin(t = 10)) \n  )\n\n\n\n\n\n\n# I had to look up the theme details because the text elements were originally too small.",
    "crumbs": [
      "Cheatsheet",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Exam1_code</span>"
    ]
  },
  {
    "objectID": "Exam_1_Cheetsheet.html",
    "href": "Exam_1_Cheetsheet.html",
    "title": "8  Exam_1_Cheetsheet",
    "section": "",
    "text": "My Cheat Sheet for Exam 1 STAT112 ,",
    "crumbs": [
      "Cheatsheet",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Exam_1_Cheetsheet</span>"
    ]
  }
]