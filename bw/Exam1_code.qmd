---
title: "Exam1_code"
format: html
---

Research question:
What does the consumption of each food category in each country look like?

Part 3:
```{r}
library(tidytuesdayR)
library(tidyverse)

```

Part 4:
```{r}
tuesdata <- tt_load('2020-02-18')
fc <- tuesdata$food_consumption
```


Part 5:
```{r}
head(tuesdata)
dim(tuesdata)
tail(tuesdata)
str(tuesdata)
class(tuesdata)
```

```{r}
head(fc)
dim(fc)
tail(fc)
str(fc)
class(fc)
```


Part 6:
- The units of observation are country, food_category, consumption, and co2_emission
- There are 11 food categories
- there are 130 countries


Part 7:
- There are 3 variables involved in the research question
- The variables are, food_category (categorical), country (categorical), and consumption

```{r}
ggplot(fc, aes(y = food_category)) + 
  geom_bar() + 
   theme(axis.text.x = element_text(angle = 45, hjust = 1))
# bad bar graph, however for univariate categorical data, a bar graph is optimal. This graph shows that there is the same amount of every food category. 

```
```{r, fig.height=15, fig.width=15}
ggplot(fc, aes(x = country)) + 
  geom_bar()

# As discussed in class, the visualizations for countries would be very difficult to produce because of the very high number of countries in the dataset. 
# Simmilar to the previous graph, this is a univariate categorical visualization, so a bar graph would be best to use. 
```

```{r}
ggplot(fc, aes(x = consumption)) + 
  geom_density()

# Consumption is a numerical value. The best univariate plot for a numerical variable is a density graph or histogram. However, this graph does not tell a good story. 
```

Part 8:
Overall Food Consumption / Food Category
```{r}
ggplot(fc, aes(x = food_category, y = consumption)) + 
  geom_boxplot() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# This graph is better than the previous graphs. It is a bivariate graph with one categorical variable and one numberical variable. 
```

Overall Food Consumption / Country
```{r, fig.height=15, fig.width=15}
ggplot(fc, aes(y = country, x = consumption)) + 
  geom_boxplot() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# This graph is not good because there is a very large number of countries. This makes it almost impossible to interpret the graph. However, a boxplot is the optimal graph in this situation because the goal is to visualize a numerical variable and categorical variable in a bivariate visualization. If there was more space for the graph to occupy it would be more effective.
```

Part 9:
```{r, fig.height=15, fig.width=15}
ggplot(fc, aes(fill = consumption, x = food_category, y = country)) + 
  geom_tile()

# This graph is not effective because there is not enough screen space on the computer to fit all countries. 
```

The other visualizations I would try this research question are a map or a facet wraped bar graph. A choropleth map would be best because each country could be shaded a different color based on the amount of consumption. 


Part 10:
At least five effective viz concepts for this research question:
1. captions
2. color blind friendly
3. alternative text
4. aesthetically pleasing theme/style
5. labeled axes
6. title
7. source



```{r, fig.height=15, fig.width=15}

ggplot(fc, aes(fill = food_category, y = consumption, x = food_category)) + 
  geom_boxplot() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  theme_minimal()

```


```{r, fig.height=15, fig.width=15}
ggplot(fc, aes(x = food_category, y = consumption, fill = food_category)) + 
  geom_boxplot() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) + 
  theme_grey() + 
  labs(x = "Food Category", 
       y = "Consumption", 
       title = "Amount of Consumption of Different Food Categories",
       Caption = "Visualization By: Nolan Rittenberg, 
       Data From: tidytuesdayR") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 14), 
    axis.text.y = element_text(size = 14),  
    axis.title.x = element_text(size = 16, face = "bold"), 
    axis.title.y = element_text(size = 16, face = "bold"),  
    plot.title = element_text(size = 20, face = "bold", hjust = 0.5, margin = margin(b = 15)),  
    plot.caption = element_text(size = 12, hjust = 0, margin = margin(t = 10)) 
  )

# I had to look up the theme details because the text elements were originally too small. 
  
```








